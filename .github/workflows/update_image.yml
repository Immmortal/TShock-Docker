# This is a basic workflow to help you get started with Actions

name: Update Docker.io Image

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      timeout-minutes: 1


    - name: Set up Python 3
      uses: actions/setup-python@v2
      timeout-minutes: 5
      with:
        python-version: 3.x

    - name: Setup pip cache
      uses: actions/cache@v2
      timeout-minutes: 5
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install python deps
      run: python -m pip install -r requirements.txt
      timeout-minutes: 5

    - name: Create Dockerfile
      run: python create_docker_file.py
      timeout-minutes: 5

    - name: Commit
      timeout-minutes: 3
      run: |
        set -x
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git stash push --include-untracked &&
        git switch --guess -c gen origin/gen ||
        git checkout -B gen ||
        exit $?
        git pull --ff-only ||
        git reset --hard origin/gen
        git stash pop || git checkout stash -- . || :
        git add *
        git commit -am "New version built"

      
    - uses: azure/docker-login@v1
      timeout-minutes: 1
      with:
        login-server: index.docker.io
        username: ${{ secrets.DOCKERIO_USERNAME }}
        password: ${{ secrets.DOCKERIO_PASSWORD }}
        

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v3
      timeout-minutes: 10
      with:
        buildx-version: latest
        qemu-version: latest
            
    -
      name: Docker Login
      if: success() && github.event_name != 'pull_request'
      timeout-minutes: 1
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERIO_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKERIO_PASSWORD }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
  
    
    - name: Build dockerfile (with push)
      if: success() && github.event_name != 'pull_request'
      timeout-minutes: 30
      run: |
            docker buildx build \
            --platform=linux/amd64,linux/386,linux/arm/v7,linux/arm64/v8 \
            --output "type=image,push=true" \
            --file ./Dockerfile . \
            --tag tieonlinux/tshock:latest

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gen
